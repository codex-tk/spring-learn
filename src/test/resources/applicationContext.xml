<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="org.sqlite.JDBC"/>
        <property name="url" value="jdbc:sqlite:./sample.db"/>
    </bean>
    <bean id="jdbcContext" class="springbook.user.dao.olds.JdbcContext">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="userDao" class="springbook.user.dao.UserDaoJdbc">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <constructor-arg name="dataSource" ref="dataSource"/>
    </bean>
    <bean id="mailSender" class="springbook.user.service.DummyMailSender">
    </bean>
    <!--
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="mail.server.com"/>
    </bean>

    <bean id="mailSender" class="springbook.user.service.DummyMailSender">
    </bean>
    <bean id="userService" class="springbook.user.service.UserServiceTx">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="userService" ref="userServiceImpl"/>
    </bean>

    <bean id="userService" class="springbook.user.service.TransactionProxyFactoryBean">
        <property name="objectType" value="springbook.user.service.UserService"/>
        <property name="target" ref="userServiceImpl"/>
        <property name="transactionManager" ref="transactionManager"/>
        <property name="pattern" value="upgradeLevels"/>
    </bean>
       -->
    <!--
    <bean id="userService" class="org.springframework.aop.framework.ProxyFactoryBean">
        <property name="target" ref="userServiceImpl"/>
        <property name="interceptorNames">
            <list>
                <value>transactionAdvisor</value>
            </list>
        </property>
    </bean>
    <bean id="transactionPointCut" class="org.springframework.aop.support.NameMatchMethodPointcut">
        <property name="mappedName" value="upgrade*"/>
    </bean>
       <bean id="transactionPointCut" class="springbook.proxy.NameMatchClassMethodPointcut">
        <property name="mappedName" value="upgrade*"/>
        <property name="mappedClassName" value="*ServiceImpl"/>
    </bean>
      <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"/>
    <bean id="transactionPointCut" class="org.springframework.aop.aspectj.AspectJExpressionPointcut">
        <property name="expression" value="execution(* *..*ServiceImpl.upgrade*(..))"/>
    </bean>
        <bean id="transactionAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
        <property name="advice" ref="transactionAdvice"/>
        <property name="pointcut" ref="transactionPointCut"/>
    </bean>
        <bean id="transactionAdvice" class="springbook.proxy.TransactionAdvice">
        <property name="transactionManager" ref="transactionManager"/>
    </bean>
        <bean id="transactionAdvice" class="org.springframework.transaction.interceptor.TransactionInterceptor">
        <property name="transactionManager" ref="transactionManager"/>
        <property name="transactionAttributes">
            <props>
                <prop key="get*">PROPAGATION_REQUIRED,readOnly</prop>
                <prop key="upgrade*">PROPAGATION_REQUIRES_NEW,ISOLATION_SERIALIZABLE</prop>
            </props>
        </property>
    </bean>
    -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
            <tx:method name="upgrade*" propagation="REQUIRES_NEW" isolation="SERIALIZABLE"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointCut" expression="execution(* *..*ServiceImpl.upgrade*(..))"></aop:pointcut>
        <aop:advisor advice-ref="transactionAdvice" pointcut-ref="transactionPointCut"/>
    </aop:config>


    <bean id="userService" class="springbook.user.service.UserServiceImpl">
        <property name="userDao" ref="userDao"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="mailSender" ref="mailSender"/>
    </bean>
    <bean id="testUserService" class="springbook.UserServiceTest$TestUserServiceImpl" parent="userService">
        <constructor-arg name="id" value="4"/>
    </bean>
</beans>